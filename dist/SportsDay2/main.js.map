{"version":3,"sources":["webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/about/about.component.html","webpack:///./src/app/about/about.component.scss","webpack:///./src/app/about/about.component.ts","webpack:///./src/app/admin/admin.component.css","webpack:///./src/app/admin/admin.component.html","webpack:///./src/app/admin/admin.component.ts","webpack:///./src/app/admin/admin.service.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/event-detail/event-detail.component.css","webpack:///./src/app/event-detail/event-detail.component.html","webpack:///./src/app/event-detail/event-detail.component.ts","webpack:///./src/app/event-detail/event-detail.service.ts","webpack:///./src/app/event-finder/event-finder.component.css","webpack:///./src/app/event-finder/event-finder.component.html","webpack:///./src/app/event-finder/event-finder.component.ts","webpack:///./src/app/event-finder/event-finder.service.ts","webpack:///./src/app/form-detail/form-detail.component.css","webpack:///./src/app/form-detail/form-detail.component.html","webpack:///./src/app/form-detail/form-detail.component.ts","webpack:///./src/app/form-detail/form-detail.service.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/material-imports/material-imports.module.ts","webpack:///./src/app/not-found/not-found.component.css","webpack:///./src/app/not-found/not-found.component.html","webpack:///./src/app/not-found/not-found.component.ts","webpack:///./src/app/services/http_interceptor.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"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","file":"main.js","sourcesContent":["var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-SG\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-SG.js\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<h1>About this site</h1>\\n\\n<p>\\n    This website was developed to allow spectators of The Manchester Grammar School's annual Senior Sports Day to view results, events, and competitors in these events. It is a collaborative effort between the Computer Science and PE departments of the school, the staff responsible in each department being Mr D Millington and Mr T Grainger respectively. It is hoped that students, parents and staff will find this website beneficial. It works by fetching data from a database and displaying it in a clear fashion, following Material Design concepts.\\n</p>\\n\\n<h1>How it works</h1>\\n<p>\\n    This website is written with <a class=\\\"no-link-blue\\\" href=\\\"https://angular.io\\\" target=\\\"_blank\\\">Angular 7</a>, as well as a <a class=\\\"no-link-blue\\\" href=\\\"https://rubyonrails.org/\\\" target=\\\"_blank\\\">Ruby on Rails</a> backend, which controls a <a class=\\\"no-link-blue\\\" href=\\\"https://www.postgresql.org/\\\" target=\\\"_blank\\\">PostgreSQL</a> relational database. The Angular frontend is written in <a class=\\\"no-link-blue\\\" href=\\\"https://www.typescriptlang.org/\\\" target=\\\"_blank\\\">TypeScript</a>, which is a 'typed superset' of JavaScript - it simply compiles into plain JavaScript, but makes the developer's life easier. Ruby on Rails is practically perfect for making simple JSON APIs like the one required for this website, which almost completely automatically serve objects from a database. Rails is also considerably fast, and is written in Ruby which is a very modern and adequate programming language.\\n</p>\\n\\n<p>\\n    In many ways, this system can be considered an improvement over last year's website. In 2018, we used Angular<strong>JS</strong> (Angular's non-CLI predecessor) to fetch data from a Google Sheet using their API. This was in many ways messy and quite slow, and was a slightly 'hacky' way of simulating a relational database. We used a spreadsheet primarily to avoid having to set up a backend with a proper database, which could have caused instabilities.\\n</p>\\n\\n<p>\\n    Finally, this website is styled with <a href=\\\"https://material.angular.io/\\\" target=\\\"_blank\\\" class=\\\"no-link-blue\\\">Angular Material</a>, which is perfect for websites used primarily on mobile devices. We think it looks quite pretty.\\n</p>\\n\\n<h1>Development credits</h1>\\n\\n<p>\\n    This website was developed by two students of The Manchester Grammar School: Theodore Tucker and Pal Kerecsenyi, under the guidance of Mr D Millington, the Head of Computer Science. This project is entirely open source, and the source code is available on GitHub here: <a href=\\\"https://github.com/mgs-sports-day\\\" class=\\\"no-link-blue\\\" target=\\\"_blank\\\">https://github.com/mgs-sports-day</a>. By using this site, you understand that it is licensed under the terms of the <a href=\\\"https://www.gnu.org/licenses/gpl-3.0.txt\\\" class=\\\"no-link-blue\\\">GNU General Public License v3.0</a>, and thus understand that <strong>NO WARRANTY WHATSOEVER</strong> is provided.\\n</p>\\n\\n<h1>Contact</h1>\\n\"","module.exports = \"p {\\n  font-size: 1rem;\\n  line-height: 1.5rem;\\n  color: #212529 !important; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWJvdXQvQzpcXFVzZXJzXFxBZG1pbmlzdHJhdG9yLkdSQVBILVBDXFxEb2N1bWVudHNcXFBST0pFQ1RTXFxTcG9ydHNEYXkyL3NyY1xcYXBwXFxhYm91dFxcYWJvdXQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxlQUFlO0VBQ2YsbUJBQW1CO0VBQ25CLHlCQUF5QixFQUFBIiwiZmlsZSI6InNyYy9hcHAvYWJvdXQvYWJvdXQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJwIHtcclxuICAgIGZvbnQtc2l6ZTogMXJlbTtcclxuICAgIGxpbmUtaGVpZ2h0OiAxLjVyZW07XHJcbiAgICBjb2xvcjogIzIxMjUyOSAhaW1wb3J0YW50O1xyXG59XHJcbiJdfQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.scss']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2FkbWluLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"loading\\\"></mat-progress-bar>\\n\\n<h1>\\n    Admin\\n    <span class=\\\"mute\\\">{{ time }}</span>\\n</h1>\\n\\n<mat-horizontal-stepper [linear]=\\\"true\\\" *ngIf=\\\"!loading\\\" #stepper>\\n\\n    <mat-step [stepControl]=\\\"scopeFormGroup\\\">\\n        <ng-template matStepLabel>Select event and year group</ng-template>\\n\\n        <form [formGroup]=\\\"scopeFormGroup\\\">\\n            <mat-form-field appearance=\\\"outline\\\">\\n                <mat-label>Year group</mat-label>\\n\\n                <mat-select formControlName=\\\"year\\\" required>\\n                    <mat-option *ngFor=\\\"let year of [7, 8, 9, 10]\\\" [value]=\\\"year\\\">\\n                        Year {{ year }}\\n                    </mat-option>\\n                </mat-select>\\n            </mat-form-field>\\n\\n            <mat-form-field appearance=\\\"outline\\\">\\n                <mat-label>Event</mat-label>\\n\\n                <mat-select formControlName=\\\"event\\\" required>\\n                    <mat-option *ngFor=\\\"let event of events\\\" [value]=\\\"event.id\\\">\\n                        {{ event.name }}\\n                    </mat-option>\\n                </mat-select>\\n            </mat-form-field>\\n\\n            <button mat-raised-button matStepperNext color=\\\"primary\\\" ngClass=\\\"display-block\\\" (click)=\\\"preventEvent($event)\\\">\\n                Next\\n                <mat-icon>arrow_forward</mat-icon>\\n            </button>\\n        </form>\\n    </mat-step>\\n\\n    <mat-step [stepControl]=\\\"competitorFormGroup\\\">\\n        <ng-template matStepLabel>Select competitor</ng-template>\\n\\n        <form [formGroup]=\\\"competitorFormGroup\\\">\\n            <mat-form-field appearance=\\\"outline\\\">\\n                <mat-label>Competitor</mat-label>\\n\\n                <mat-select formControlName=\\\"competitor\\\" required>\\n                    <mat-option *ngFor=\\\"let competitor of getCompetitorList(scopeFormGroup.controls.event.value)\\\"\\n                                [value]=\\\"competitor\\\" >\\n                        Competitor {{ competitor }}\\n                    </mat-option>\\n                </mat-select>\\n            </mat-form-field>\\n        </form>\\n\\n        <div class=\\\"display-block\\\">\\n            <button mat-raised-button matStepperPrevious color=\\\"accent\\\" (click)=\\\"preventEvent($event)\\\">\\n                <mat-icon>arrow_back</mat-icon>\\n                Back\\n            </button>\\n            <button mat-raised-button matStepperNext color=\\\"primary\\\" (click)=\\\"loadForms($event)\\\">\\n                Next\\n                <mat-icon>arrow_forward</mat-icon>\\n            </button>\\n        </div>\\n\\n    </mat-step>\\n\\n    <mat-step [stepControl]=\\\"authenticateFormGroup\\\">\\n        <ng-template matStepLabel>Authenticate</ng-template>\\n\\n        <form [formGroup]=\\\"authenticateFormGroup\\\">\\n            <mat-form-field appearance=\\\"outline\\\">\\n                <mat-label>Token</mat-label>\\n\\n                <input matInput placeholder=\\\"Paste token...\\\" formControlName=\\\"token\\\" type=\\\"text\\\" required>\\n            </mat-form-field>\\n\\n            <button mat-raised-button color=\\\"primary\\\" class=\\\"display-block\\\" (click)=\\\"saveToken($event)\\\" matStepperNext>\\n                Authenticate\\n                <mat-icon>lock</mat-icon>\\n            </button>\\n        </form>\\n    </mat-step>\\n\\n    <mat-step>\\n        <ng-template matStepLabel>Enter scores</ng-template>\\n\\n        <mat-spinner *ngIf=\\\"formsLoading\\\"></mat-spinner>\\n\\n        <p>\\n            <strong>{{ getSelectedEventName() }}</strong>,\\n            competitor <strong>{{ competitorFormGroup.controls.competitor.value }}</strong>\\n        </p>\\n\\n        <p *ngIf=\\\"usingExistingData\\\">\\n            You're updating existing data for this event.\\n        </p>\\n\\n        <p *ngIf=\\\"!usingExistingData\\\">\\n            You're uploading new data, as this event has no existing data.\\n        </p>\\n\\n        <div class=\\\"mat-elevation-z8\\\" *ngIf=\\\"!formsLoading\\\">\\n\\n            <table mat-table [dataSource]=\\\"forms\\\">\\n                <ng-container matColumnDef=\\\"form\\\">\\n                    <th mat-header-cell *matHeaderCellDef>Form</th>\\n\\n                    <td mat-cell *matCellDef=\\\"let element\\\">\\n                        {{ element.year }}{{ element.name }}\\n                    </td>\\n                </ng-container>\\n\\n                <ng-container matColumnDef=\\\"rank\\\">\\n                    <th mat-header-cell *matHeaderCellDef>Position</th>\\n\\n                    <td mat-cell *matCellDef=\\\"let element\\\">\\n                        <mat-form-field appearance=\\\"outline\\\">\\n                            <mat-label>Position</mat-label>\\n\\n                            <input matInput\\n                                   placeholder=\\\"1-9\\\"\\n                                   type=\\\"number\\\"\\n                                   max=\\\"9\\\"\\n                                   min=\\\"1\\\" [(ngModel)]=\\\"element.position\\\"\\n                                   (click)=\\\"$event.target.select()\\\"\\n                                   (ngModelChange)=\\\"updatePosition(element)\\\" required>\\n                        </mat-form-field>\\n                    </td>\\n                </ng-container>\\n\\n                <ng-container matColumnDef=\\\"score\\\">\\n                    <th mat-header-cell *matHeaderCellDef>\\n                        <span *ngIf=\\\"recordsAllowed()\\\">Score</span>\\n                    </th>\\n\\n                    <td mat-cell *matCellDef=\\\"let element\\\">\\n                        <mat-form-field appearance=\\\"outline\\\" *ngIf=\\\"element.position === 1 && recordsAllowed()\\\">\\n                            <mat-label>Score ({{ selectedEvent.score_units }}s)</mat-label>\\n\\n                            <input matInput\\n                                   placeholder=\\\"120\\\"\\n                                   type=\\\"number\\\"\\n                                   [(ngModel)]=\\\"element.score_number\\\"\\n                                   (click)=\\\"$event.target.select()\\\"\\n                                   (change)=\\\"testRecord(element)\\\" >\\n                        </mat-form-field>\\n                    </td>\\n                </ng-container>\\n\\n                <ng-container matColumnDef=\\\"newRecord\\\">\\n                    <th mat-header-cell *matHeaderCellDef>\\n                        <span *ngIf=\\\"recordBeaten && !recordHasNoHolder\\\">New record</span>\\n                    </th>\\n\\n                    <td mat-cell *matCellDef=\\\"let element\\\">\\n                        <mat-form-field appearance=\\\"outline\\\" *ngIf=\\\"element.beats_record && !recordHasNoHolder\\\">\\n                            <mat-label>New record holder name</mat-label>\\n\\n                            <input matInput\\n                                   placeholder=\\\"John Smith\\\"\\n                                   type=\\\"text\\\"\\n                                   [(ngModel)]=\\\"element.record_holder\\\">\\n                        </mat-form-field>\\n                    </td>\\n                </ng-container>\\n\\n                <ng-container matColumnDef=\\\"points\\\">\\n                    <th mat-header-cell *matHeaderCellDef>Points</th>\\n\\n                    <td mat-cell *matCellDef=\\\"let element\\\">\\n                        {{ getPointAllocation(competitorFormGroup.controls.competitor.value, element) }}\\n\\n                        <span *ngIf=\\\"element.equals_record\\\">\\n                            <br/>\\n                            Equals record (+1 point)\\n                        </span>\\n\\n                        <span *ngIf=\\\"element.beats_record\\\">\\n                            <br/>\\n                            Beats record (+2 points)\\n                        </span>\\n                    </td>\\n                </ng-container>\\n\\n                <tr mat-header-row *matHeaderRowDef=\\\"['form', 'rank', 'score', 'newRecord', 'points']\\\"></tr>\\n                <tr mat-row *matRowDef=\\\"let row; columns: ['form', 'rank', 'score', 'newRecord', 'points']\\\"\\n                    [ngClass]=\\\"'table-position-' + (row.position - 1)\\\"></tr>\\n            </table>\\n\\n        </div>\\n\\n        <div class=\\\"margin-top display-block\\\">\\n            <button matStepperPrevious mat-raised-button color=\\\"accent\\\" (click)=\\\"preventEvent($event)\\\">\\n                <mat-icon>arrow_back</mat-icon>\\n                Back\\n            </button>\\n\\n            <button mat-raised-button color=\\\"primary\\\" (click)=\\\"finish()\\\">\\n                Save\\n                <mat-icon>check</mat-icon>\\n            </button>\\n        </div>\\n\\n    </mat-step>\\n\\n</mat-horizontal-stepper>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {EventDetailService, Event, Record} from '../event-detail/event-detail.service';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {Form, FormDetailService, Score} from '../form-detail/form-detail.service';\nimport {AdminService} from './admin.service';\nimport {MatSnackBar} from '@angular/material';\nimport {HttpErrorResponse} from '@angular/common/http';\nimport * as moment from 'moment';\n\n@Component({\n    selector: 'app-admin',\n    templateUrl: './admin.component.html',\n    styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n\n    constructor(private eventDetailService: EventDetailService,\n                private formDetailService: FormDetailService,\n                private adminService: AdminService,\n                private snackBar: MatSnackBar,\n                private formBuilder: FormBuilder) {\n        this.loading = true;\n\n        this.pointAllocations = {\n            A: [25, 23, 22, 21, 20, 19, 18, 17, 17],\n            B: [16, 15, 14, 13, 12, 11, 10, 9, 9],\n            C: [8, 7, 6, 5, 4, 3, 2, 1, 1]\n        };\n    }\n\n    forms: Form[];\n    events: Event[];\n    selectedEvent: Event;\n    scopeFormGroup: FormGroup;\n    competitorFormGroup: FormGroup;\n    authenticateFormGroup: FormGroup;\n\n    loading: boolean;\n    formsLoading: boolean;\n    usingExistingData: boolean;\n\n    pointAllocations: object;\n\n    recordBeaten: boolean;\n    recordHasNoHolder: boolean;\n    currentRecord: Record;\n    existingRecord: Record;\n    oldRecord: Record;\n\n    time: string;\n\n    static numberToLetter(n) {\n        const letters = ['A', 'B', 'C'];\n        return letters[n];\n    }\n\n    static isEmptyObject(object: object) {\n        for (const key in object) {\n            if (object.hasOwnProperty(key)) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    testRecordBeaten(currentScore, oldScore) {\n        if ([1, 2, 3, 4].includes(this.selectedEvent.id)) {\n            return currentScore > oldScore;\n        } else if ([5, 6, 7, 8, 9, 10, 11].includes(this.selectedEvent.id)) {\n            return currentScore < oldScore;\n        }\n    }\n\n    ngOnInit() {\n        this.time = moment().format('LTS');\n        window.setInterval(() => {\n            this.time = moment().format('LTS');\n        }, 1000);\n\n        this.eventDetailService.getEvents()\n            .subscribe((events: [Event]) => {\n                this.events = [...events];\n\n                this.scopeFormGroup = this.formBuilder.group({\n                    year: ['', Validators.required],\n                    event: ['', Validators.required]\n                });\n\n                this.competitorFormGroup = this.formBuilder.group({\n                    competitor: ['', Validators.required]\n                });\n\n                this.authenticateFormGroup = this.formBuilder.group({\n                    token: [(localStorage.getItem('token') || ''), Validators.required]\n                });\n\n                this.loading = false;\n            });\n    }\n\n    preventEvent($event) {\n        $event.preventDefault();\n    }\n\n    saveToken($event) {\n        this.preventEvent($event);\n        localStorage.setItem('token', this.authenticateFormGroup.controls.token.value);\n    }\n\n    loadForms($event) {\n        this.preventEvent($event);\n\n        this.formsLoading = true;\n\n        this.formDetailService.getYearGroupForms(this.scopeFormGroup.controls.year.value)\n            .subscribe((forms: Form[]) => {\n\n                this.forms = [...forms];\n\n                this.eventDetailService.getEvent(this.scopeFormGroup.controls.event.value)\n                    .subscribe((event: Event) => {\n\n                        this.selectedEvent = event;\n\n                        this.getRecord(() => {\n                            if (this.currentRecord) {\n                                if (this.competitorFormGroup.controls.competitor.value === this.currentRecord.competitor) {\n                                    const recordForm = this.forms.find((e: Form) => {\n                                        return e.id === this.currentRecord.form.id;\n                                    });\n\n                                    this.forms[this.forms.indexOf(recordForm)].record_holder = this.currentRecord.holder;\n                                    this.forms[this.forms.indexOf(recordForm)].score_number = this.currentRecord.score;\n                                    this.forms[this.forms.indexOf(recordForm)].beats_record = true;\n                                    this.recordBeaten = true;\n                                    this.existingRecord = this.currentRecord;\n                                }\n                            } else {\n                                this.forms.forEach((form: Form) => {\n                                    form.score_number = 0;\n                                    form.record_holder = '';\n                                });\n                            }\n\n                            const thisEventScores: Score[] = event.scores.filter((e: Score) => {\n                                return (\n                                    e.form.year === this.scopeFormGroup.controls.year.value &&\n                                    e.competitor === this.competitorFormGroup.controls.competitor.value\n                                );\n                            });\n\n                            this.usingExistingData = thisEventScores.length !== 0;\n\n                            if (thisEventScores.length !== 0) {\n                                this.forms.forEach((form: Form) => {\n                                    const score: Score = thisEventScores.find(e => {\n                                        return e.form.id === form.id;\n                                    });\n\n                                    form.position = score.rank || 8;\n                                    form.score_id = score.id;\n                                });\n                            } else {\n                                this.forms.forEach((form: Form) => {\n                                    form.position = 8;\n                                });\n                            }\n\n                            this.formsLoading = false;\n                        });\n                    });\n            });\n    }\n\n    testRecord(form: Form) {\n        if (this.recordsAllowed()) {\n            this.adminService.getRecord(this.scopeFormGroup.controls.year.value, this.selectedEvent.id)\n                .subscribe((record: Record) => {\n                    if (record) {\n                        if ((record.units === 'metre' && form.score_number > record.score) ||\n                            (record.units === 'second' && form.score_number < record.score)) {\n                            form.equals_record = false;\n                            form.beats_record = true;\n                            this.recordBeaten = true;\n                        } else if (form.score_number === record.score) {\n                            form.equals_record = true;\n                            form.beats_record = false;\n                            this.recordBeaten = false;\n                        } else {\n                            form.equals_record = false;\n                            form.beats_record = false;\n                            this.recordBeaten = false;\n                        }\n\n                        this.oldRecord = record;\n                    } else {\n                        form.equals_record = false;\n                        form.beats_record = true;\n                        this.recordBeaten = true;\n                    }\n\n                    this.recordHasNoHolder = [10, 11].includes(this.selectedEvent.id);\n                });\n        }\n    }\n\n    getRecord(callback: () => void) {\n        this.adminService.getCurrentRecord(this.scopeFormGroup.controls.year.value, this.selectedEvent.id)\n            .subscribe((record: Record) => {\n                if (record) {\n                    this.currentRecord = record;\n                }\n\n                callback();\n            });\n    }\n\n    updatePosition(element: Form) {\n        element.equals_record = false;\n        element.beats_record = false;\n        this.recordBeaten = false;\n        element.score_number = 0;\n    }\n\n    finish() {\n        const scoresArray: Score[] = [];\n\n        this.forms.forEach(form => {\n            const newScore: Score = {\n                event_id: this.scopeFormGroup.controls.event.value,\n                form_id: form.id,\n                points: this.getPointAllocation(this.competitorFormGroup.controls.competitor.value, form),\n                competitor: this.competitorFormGroup.controls.competitor.value,\n                id: null\n            };\n\n            if (this.usingExistingData) {\n                newScore.id = form.score_id;\n            }\n\n            scoresArray.push(newScore);\n        });\n\n        this.adminService.saveScores(scoresArray, this.authenticateFormGroup.controls.token.value)\n            .subscribe(() => {\n                const completeCycle = () => {\n                    this.snackBar.open('Scores saved successfully!', 'Start again')\n                        .afterDismissed().subscribe(() => {\n                            window.location.reload();\n                    });\n                };\n\n                const scoreForm = this.forms.find((e: Form) => {\n                    return e.score_number > 0;\n                });\n\n                if (scoreForm) {\n                    if (this.testRecordBeaten(scoreForm.score_number, this.oldRecord.score)) {\n                        console.log('sending create record request');\n                        this.adminService.updateRecord(\n                            scoreForm,\n                            this.selectedEvent,\n                            this.competitorFormGroup.controls.competitor.value,\n                            this.authenticateFormGroup.controls.token.value)\n                            .subscribe(() => {\n                                completeCycle();\n                            });\n\n                    } else if (!this.testRecordBeaten(scoreForm.score_number, this.oldRecord.score)) {\n                        console.log('sending delete record request');\n                        this.adminService.deleteRecord(\n                            scoreForm.year,\n                            this.selectedEvent,\n                            this.authenticateFormGroup.controls.token.value\n                        )\n                            .subscribe(() => {\n                                completeCycle();\n                            });\n                    } else {\n                        completeCycle();\n                    }\n                } else {\n                    completeCycle();\n                }\n\n            }, (error: HttpErrorResponse) => {\n                let errorMessage;\n\n                if (error.status === 403) {\n                    errorMessage = 'Unauthorised token.';\n                } else {\n                    errorMessage = 'An error occurred.';\n                }\n\n                this.snackBar.open(errorMessage, 'Dismiss');\n            });\n    }\n\n    getCompetitorList(eventId) {\n        const eventIndex = this.events.map(e => e.id).indexOf(eventId);\n        const competitorArray = [];\n\n        if (this.events[eventIndex]) {\n\n            for (let i = 0; i < this.events[eventIndex].competitors; i++) {\n                competitorArray.push(AdminComponent.numberToLetter(i));\n            }\n\n            return competitorArray;\n        } else {\n            return [];\n        }\n    }\n\n    getPointAllocation(competitor, element) {\n        let addition = 0;\n\n        if (element.beats_record) {\n            addition = 2;\n        } else if (element.equals_record) {\n            addition = 1;\n        }\n\n        return this.pointAllocations[competitor][element.position - 1] + addition;\n    }\n\n    getSelectedEventName() {\n        if (!this.selectedEvent) {\n            return '';\n        } else {\n            return this.selectedEvent.name;\n        }\n    }\n\n    recordsAllowed() {\n        return this.competitorFormGroup.controls.competitor.value === 'A';\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders, HttpParams} from '@angular/common/http';\nimport {forkJoin, Observable} from 'rxjs';\nimport {Form, Score} from '../form-detail/form-detail.service';\nimport {Record, Event} from '../event-detail/event-detail.service';\nimport {HttpParamsOptions} from '@angular/common/http/src/params';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AdminService {\n    rootUrl: string;\n\n    constructor(private http: HttpClient) {\n        this.rootUrl = localStorage.getItem('rootUrl');\n    }\n\n    saveScores(scores: Score[], token: string): Observable<Score[]> {\n\n        const httpArray = [];\n\n        scores.forEach(score => {\n            httpArray.push(\n                this.http.post(this.rootUrl + '/scores', {...score}, {\n                    headers: new HttpHeaders({\n                        Token: token\n                    })\n                })\n            );\n        });\n\n        return forkJoin(httpArray);\n    }\n\n    getRecord(yearGroup: number, eventId: number): Observable<Record> {\n        return this.http.get<Record>(this.rootUrl + '/events/' + eventId + '/year_group/' + yearGroup + '/record');\n    }\n\n    getCurrentRecord(yearGroup: number, eventId: number): Observable<Record> {\n        return this.http.get<Record>(this.rootUrl + '/events/' + eventId + '/year_group/' + yearGroup + '/current_record');\n    }\n\n    updateRecord(form: Form, event: Event, competitor: string, token: string): Observable<Record> {\n        if (form.record_holder === '' || form.record_holder == null || form.record_holder.length === 0) {\n            form.record_holder = null;\n        }\n\n        return this.http.post<Record>(this.rootUrl + '/events/' + event.id + '/year_group/' + form.year + '/record', {\n            record_holder: form.record_holder,\n            record_value: form.score_number,\n            record_competitor: competitor,\n            form_id: form.id\n        }, {\n            headers: new HttpHeaders({\n                Token: token\n            })\n        });\n    }\n\n    deleteRecord(yearGroup: number, event: Event, token: string) {\n        return this.http.post(this.rootUrl + '/events/' + event.id + '/year_group/' + yearGroup + '/record',  {\n            destroy_record: true\n        }, {\n            headers: new HttpHeaders({\n                Token: token\n            })\n        });\n    }\n}\n","module.exports = \"<mat-sidenav-container class=\\\"sidenav-container\\\">\\n    <mat-sidenav #sidenav position=\\\"end\\\" mode=\\\"over\\\" [(opened)]=\\\"sidenavOpened\\\">\\n\\n        <mat-toolbar color=\\\"primary\\\">\\n            <span>Menu</span>\\n        </mat-toolbar>\\n\\n        <mat-nav-list>\\n            <mat-list-item *ngFor=\\\"let item of navigation\\\">\\n                <a matLine [routerLink]=\\\"item.path\\\" (click)=\\\"sidenav.toggle()\\\">\\n                    {{ item.name }}\\n                </a>\\n            </mat-list-item>\\n        </mat-nav-list>\\n\\n    </mat-sidenav>\\n\\n    <mat-sidenav-content>\\n\\n        <mat-toolbar color=\\\"primary\\\" class=\\\"nav\\\">\\n            <a routerLink=\\\"/\\\" class=\\\"no-link\\\">\\n                <div>\\n                    <img src=\\\"assets/mgs_white_logo.svg\\\" alt=\\\"White MGS logo\\\">\\n                    <span class=\\\"nav-text\\\">Sports Day 2019</span>\\n                </div>\\n            </a>\\n\\n            <span class=\\\"nav-filler\\\"></span>\\n\\n            <button mat-icon-button *ngIf=\\\"mobile\\\" (click)=\\\"sidenav.toggle()\\\">\\n                <mat-icon>menu</mat-icon>\\n            </button>\\n\\n            <div *ngIf=\\\"!mobile\\\">\\n\\n                <a mat-button *ngFor=\\\"let item of navigation\\\" [routerLink]=\\\"item.path\\\">\\n                    {{ item.name }}\\n                </a>\\n\\n            </div>\\n        </mat-toolbar>\\n\\n        <div class=\\\"main-container\\\">\\n            <mat-card style=\\\"text-align: center; margin-bottom: 10px;\\\" matTooltip=\\\"Data is automatically reloaded every 120 seconds on some pages, to keep the website up to date with live changes.\\\">\\n                <div *ngIf=\\\"reloadEnabled\\\">\\n                    Data reloading in <strong>{{ reloadTime }} seconds</strong>\\n\\n                    <mat-progress-spinner\\n                        mode=\\\"determinate\\\"\\n                        [value]=\\\"(reloadTime / defaultReloadTime) * 100\\\"\\n                        diameter=\\\"16\\\"\\n                        style=\\\"margin-top: 10px;\\\"\\n                        class=\\\"inline-spinner\\\"></mat-progress-spinner>\\n                </div>\\n\\n                <div *ngIf=\\\"!reloadEnabled\\\">\\n                    Auto-reloading paused on this page\\n                </div>\\n            </mat-card>\\n\\n            <router-outlet></router-outlet>\\n\\n            <mat-divider></mat-divider>\\n            <p class=\\\"footer-text\\\">This website is part of a family of co-curricular sites run by students and staff of the Manchester Grammar School. The main school website is at <a href=\\\"https://mgs.org\\\" target=\\\"_blank\\\" class=\\\"no-link-dark\\\">mgs.org.</a></p>\\n            <p class=\\\"footer-text\\\">\\n                <a routerLink=\\\"/admin\\\" class=\\\"no-link-dark\\\">Admin</a>\\n            </p>\\n        </div>\\n\\n    </mat-sidenav-content>\\n</mat-sidenav-container>\\n\\n\"","import {Component, HostListener, isDevMode, OnInit} from '@angular/core';\nimport {MatSnackBar} from '@angular/material';\nimport {CookieService} from 'ngx-cookie-service';\nimport {Router} from '@angular/router';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html'\n})\nexport class AppComponent implements OnInit {\n    mobile: boolean;\n    sidenavOpened: boolean;\n    navigation: object;\n    defaultReloadTime: number;\n    reloadTime: number;\n    reloadEnabled: boolean;\n\n    constructor(private snackBar: MatSnackBar, private cookieService: CookieService, private router: Router) {\n        this.reloadEnabled = false;\n    }\n\n    updateNavigation() {\n        this.mobile = window.innerWidth <= 768;\n    }\n\n    ngOnInit() {\n        this.updateNavigation();\n        this.sidenavOpened = false;\n\n        this.navigation = [\n            {\n                name: 'Home',\n                path: '/'\n            },\n            {\n                name: 'Event Finder',\n                path: '/find'\n            },\n            {\n                name: 'About',\n                path: '/about'\n            }\n        ];\n\n        if (isDevMode()) {\n            localStorage.setItem('rootUrl', 'http://localhost:3000');\n        } else {\n            localStorage.setItem('rootUrl', 'https://sportsday2api.herokuapp.com');\n        }\n\n        if (!this.cookieService.check('cookie-dismissed')) {\n            const snackBarRef = this.snackBar.open('This website uses cookies for anonymous statistical purposes. By continuing to use this website, it is assumed that you agree to this.', 'Accept');\n\n            snackBarRef.afterDismissed().subscribe(() => {\n                this.cookieService.set('cookie-dismissed', 'true', 300);\n            });\n        }\n\n        this.defaultReloadTime = 120;\n        this.reloadTime = this.defaultReloadTime;\n        this.router.events.subscribe(() => {\n            this.reloadEnabled = !(\n                this.router.url.includes('about')\n                || this.router.url.includes('find')\n                || this.router.url.includes('admin')\n            );\n            this.reloadTime = this.defaultReloadTime;\n        });\n\n        window.setInterval(() => {\n            if (this.reloadEnabled) {\n                this.reloadTime--;\n\n                if (this.reloadTime === 0) {\n                    const oldStrategy = this.router.routeReuseStrategy.shouldReuseRoute;\n                    this.router.routeReuseStrategy.shouldReuseRoute = () => {\n                        return false;\n                    };\n\n                    this.router.navigated = false;\n                    this.router.navigate([this.router.url])\n                        .then(() => {\n                            this.reloadTime = this.defaultReloadTime;\n                            this.router.routeReuseStrategy.shouldReuseRoute = oldStrategy;\n                        });\n                }\n            }\n        }, 1000);\n    }\n\n    @HostListener('window:resize', ['$event'])\n    onResize() {\n        this.updateNavigation();\n    }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\nimport { MaterialImportsModule } from './material-imports/material-imports.module';\nimport {HomeComponent} from './home/home.component';\nimport {RouterModule, Routes} from '@angular/router';\nimport { EventDetailComponent } from './event-detail/event-detail.component';\nimport {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\nimport { FormDetailComponent } from './form-detail/form-detail.component';\nimport { AdminComponent } from './admin/admin.component';\nimport { AboutComponent } from './about/about.component';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport {RequestInterceptor} from './services/http_interceptor';\nimport {CookieService} from 'ngx-cookie-service';\nimport { EventFinderComponent } from './event-finder/event-finder.component';\nimport {MatAutocompleteModule} from '@angular/material';\n\nconst appRoutes: Routes = [\n    { path: '', component: HomeComponent },\n    { path: 'events', component: EventDetailComponent },\n    { path: 'forms/:id', component: FormDetailComponent },\n    { path: 'events/:id', component: EventDetailComponent },\n    { path: 'admin', component: AdminComponent },\n    { path: 'about', component: AboutComponent },\n    { path: 'find', component: EventFinderComponent },\n    { path: '**', component: NotFoundComponent }\n];\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        HomeComponent,\n        EventDetailComponent,\n        FormDetailComponent,\n        AdminComponent,\n        AboutComponent,\n        NotFoundComponent,\n        EventFinderComponent\n    ],\n    imports: [\n        BrowserModule,\n        MaterialImportsModule,\n        HttpClientModule,\n        RouterModule.forRoot(\n            appRoutes,\n            {enableTracing: true}\n        ),\n        MatAutocompleteModule\n    ],\n    exports: [\n        AppComponent\n    ],\n    providers: [\n        CookieService,\n        {\n            provide: HTTP_INTERCEPTORS,\n            useClass: RequestInterceptor,\n            multi: true\n        }\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2V2ZW50LWRldGFpbC9ldmVudC1kZXRhaWwuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"loading\\\"></mat-progress-bar>\\n\\n<div *ngIf=\\\"!loading\\\">\\n    <h1>\\n        {{ event.name }}\\n\\n        <mat-menu #switcher=\\\"matMenu\\\">\\n            <a mat-menu-item *ngFor=\\\"let event of events\\\" [routerLink]=\\\"'/events/' + event.id\\\">\\n                {{ event.name }}\\n            </a>\\n        </mat-menu>\\n\\n        <button mat-stroked-button [matMenuTriggerFor]=\\\"switcher\\\">\\n            Switch event\\n            <mat-icon>arrow_drop_down</mat-icon>\\n        </button>\\n    </h1>\\n\\n    <mat-tab-group ngClass=\\\"special-padding-tab\\\">\\n        <mat-tab *ngFor=\\\"let year of [7, 8, 9, 10]\\\">\\n\\n            <ng-template mat-tab-label>\\n                Year {{ year }}\\n\\n                <strong *ngIf=\\\"!isEmptyObject(records[year]['2019'])\\\" style=\\\"margin-left: 5px;\\\">\\n                    Record!\\n                </strong>\\n            </ng-template>\\n\\n            <mat-tab-group selectedIndex=\\\"0\\\">\\n                <mat-tab *ngFor=\\\"let competitor of subEventArray(event.competitors)\\\" [label]=\\\"'Competitor ' + competitor\\\">\\n\\n                    <div class=\\\"special-padding-content\\\">\\n                        <div class=\\\"mat-elevation-z8\\\">\\n                            <table mat-table [dataSource]=\\\"scoreBreakdown[year][competitor]\\\" class=\\\"breakdown-table\\\">\\n\\n                                <ng-container matColumnDef=\\\"form\\\">\\n                                    <th mat-header-cell *matHeaderCellDef>Form</th>\\n\\n                                    <td mat-cell *matCellDef=\\\"let element\\\">\\n                                        {{ element.form.year }}{{ element.form.name }}\\n                                    </td>\\n                                </ng-container>\\n\\n                                <ng-container matColumnDef=\\\"position\\\">\\n                                    <th mat-header-cell *matHeaderCellDef>Position</th>\\n\\n                                    <td mat-cell *matCellDef=\\\"let element\\\">\\n                                        {{ element.rank }}\\n                                    </td>\\n                                </ng-container>\\n\\n                                <ng-container matColumnDef=\\\"points\\\">\\n                                    <th mat-header-cell *matHeaderCellDef>Points</th>\\n\\n                                    <td mat-cell *matCellDef=\\\"let element\\\">\\n                                        {{ element.score }}\\n                                    </td>\\n                                </ng-container>\\n\\n                                <ng-container matColumnDef=\\\"actions\\\">\\n                                    <th mat-header-cell *matHeaderCellDef></th>\\n\\n                                    <td mat-cell *matCellDef=\\\"let element\\\">\\n\\n                                        <a mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"'/forms/' + element.form.id\\\">\\n                                            View form\\n                                        </a>\\n\\n                                    </td>\\n                                </ng-container>\\n\\n                                <tr mat-header-row *matHeaderRowDef=\\\"['form', 'position', 'points', 'actions']\\\"></tr>\\n                                <tr mat-row\\n                                    *matRowDef=\\\"let row; columns: ['form', 'position', 'points', 'actions']\\\"\\n                                    [ngClass]=\\\"'table-position-' + (row.rank - 1)\\\"\\n                                ></tr>\\n\\n                            </table>\\n                        </div>\\n                    </div>\\n\\n                </mat-tab>\\n            </mat-tab-group>\\n\\n            <mat-divider></mat-divider>\\n\\n            <h1>Record data</h1>\\n\\n            <mat-accordion>\\n                <mat-expansion-panel>\\n                    <mat-expansion-panel-header>\\n                        <mat-panel-title>\\n                            2018\\n                        </mat-panel-title>\\n\\n                        <mat-panel-description>\\n                            <span *ngIf=\\\"isEmptyObject(records[year]['2018'])\\\">\\n                                No record data\\n                            </span>\\n\\n                            <span *ngIf=\\\"!isEmptyObject(records[year]['2018'])\\\">\\n                                {{ records[year]['2018'].score }} {{ records[year]['2018'].units }}s\\n                            </span>\\n                        </mat-panel-description>\\n                    </mat-expansion-panel-header>\\n\\n                    <p *ngIf=\\\"!isEmptyObject(records[year]['2018'])\\\">\\n                        {{ records[year]['2018'].score }} {{ records[year]['2018'].units }} record set\\n\\n                        <span *ngIf=\\\"records[year]['2018'].holder\\\">\\n                            by\\n                            {{ records[year]['2018'].holder }}\\n                        </span>\\n                        in 2018.\\n                    </p>\\n\\n                    <p *ngIf=\\\"isEmptyObject(records[year]['2018'])\\\">\\n                        No record data has been found for this event in 2018.\\n                    </p>\\n                </mat-expansion-panel>\\n\\n                <mat-expansion-panel>\\n                    <mat-expansion-panel-header>\\n                        <mat-panel-title>\\n                            2019\\n                        </mat-panel-title>\\n\\n                        <mat-panel-description>\\n                            <span *ngIf=\\\"!isEmptyObject(records[year]['2019'])\\\">\\n                                {{ records[year]['2019'].score }} {{ records[year]['2019'].units }}s\\n                            </span>\\n\\n                            <span *ngIf=\\\"isEmptyObject(records[year]['2019'])\\\">\\n                                2018 record not broken\\n                            </span>\\n                        </mat-panel-description>\\n                    </mat-expansion-panel-header>\\n\\n                    <p *ngIf=\\\"isEmptyObject(records[year]['2019'])\\\">\\n                        Only broken records are displayed, and the 2018 record has not been broken.\\n                    </p>\\n\\n                    <p *ngIf=\\\"!isEmptyObject(records[year]['2019'])\\\">\\n                        {{ records[year]['2019'].score }} {{ records[year]['2019'].units }} record set\\n\\n                        <span *ngIf=\\\"records[year]['2019'].holder\\\">\\n                            by\\n                            {{ records[year]['2019'].holder }}\\n                        </span>\\n\\n                        in 2019, breaking\\n\\n                        <span *ngIf=\\\"records[year]['2018'].holder\\\">\\n                            {{ records[year]['2018'].holder }}'s\\n                        </span>\\n\\n                        <span *ngIf=\\\"!records[year]['2018'].holder\\\">\\n                            the\\n                        </span>\\n\\n                        {{ records[year]['2018'].score }} {{ records[year]['2018'].units }} record set in 2018.\\n                    </p>\\n\\n                </mat-expansion-panel>\\n            </mat-accordion>\\n\\n        </mat-tab>\\n    </mat-tab-group>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Event, EventDetailService, Record} from './event-detail.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {Score} from '../form-detail/form-detail.service';\nimport {MatSnackBar} from '@angular/material';\n\n@Component({\n    selector: 'app-event-detail',\n    templateUrl: './event-detail.component.html',\n    styleUrls: ['./event-detail.component.css']\n})\nexport class EventDetailComponent implements OnInit {\n\n    constructor(private eventDetailService: EventDetailService,\n                private activatedRoute: ActivatedRoute,\n                private snackBar: MatSnackBar,\n                private router: Router) {\n        this.loading = true;\n        this.scoreBreakdown = { 7: {}, 8: {}, 9: {}, 10: {} };\n    }\n\n    event: Event;\n    events: Event[];\n    scoreBreakdown: { 7: {}, 8: {}, 9: {}, 10: {} };\n    records: object;\n    loading: boolean;\n\n    static numberToLetter(n) {\n        const letters = ['A', 'B', 'C'];\n        return letters[n];\n    }\n\n    ngOnInit() {\n        this.activatedRoute.paramMap.subscribe(params => {\n\n            this.eventDetailService.getEvent(params.get('id'))\n                .subscribe((data: Event) => {\n                    this.event = {...data};\n                    this.loading = false;\n\n                    for (let i = 0; i < this.event.competitors; i++) {\n                        for (const key in this.scoreBreakdown) {\n\n                            if (this.scoreBreakdown.hasOwnProperty(key)) {\n                                this.scoreBreakdown[key][EventDetailComponent.numberToLetter(i)] = [];\n                            }\n                        }\n                    }\n\n                    this.event.scores.forEach((score: Score) => {\n                        this.scoreBreakdown[score.form.year][score.competitor].push(score);\n                    });\n\n                    for (const yearKey in this.scoreBreakdown) {\n                        if (this.scoreBreakdown.hasOwnProperty(yearKey)) {\n                            for (const eventKey in this.scoreBreakdown[yearKey]) {\n                                if (this.scoreBreakdown[yearKey].hasOwnProperty(eventKey)) {\n\n                                    this.scoreBreakdown[yearKey][eventKey].sort((a, b) => {\n                                        return b.score - a.score;\n                                    });\n\n                                    this.scoreBreakdown[yearKey][eventKey].forEach((score: Score) => {\n                                        score.rank = this.scoreBreakdown[yearKey][eventKey].indexOf(score) + 1;\n                                    });\n\n                                }\n                            }\n                        }\n                    }\n\n                    this.records = {\n                        7: {\n                            2018: {}, 2019: {}\n                        },\n                        8: {\n                            2018: {}, 2019: {}\n                        },\n                        9: {\n                            2018: {}, 2019: {}\n                        },\n                        10: {\n                            2018: {}, 2019: {}\n                        },\n                    };\n\n                    this.event.records.forEach((record: Record) => {\n                        if (record.current_record) {\n                            this.records[record.form.year]['2019'] = record;\n                        } else {\n                            this.records[record.past_year_group]['2018'] = record;\n                        }\n                    });\n\n                    console.log(this.scoreBreakdown);\n                    console.log(this.records);\n\n                    this.eventDetailService.getEvents()\n                        .subscribe((events: Event[]) => {\n                            events.splice(events\n                                .map(e => e.id)\n                                .indexOf(\n                                    parseInt(params.get('id'), 10)\n                                ), 1);\n\n                            this.events = events;\n                        });\n                });\n        });\n    }\n\n    subEventArray(n) {\n        const array = [];\n        const letters = ['A', 'B', 'C'];\n\n        for (let i = 0; i < n; i ++) {\n            array.push(letters[i]);\n        }\n\n        return array;\n    }\n\n    isEmptyObject(object: object) {\n        for (const key in object) {\n            if (object.hasOwnProperty(key)) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Form, Score} from '../form-detail/form-detail.service';\n\nexport interface Record {\n    score: number;\n    units: string;\n    holder: string;\n    form?: Form;\n    form_id?: number;\n    event?: Event;\n    event_id?: number;\n    year: number;\n    competitor: string;\n    current_record: boolean;\n    past_year_group: number;\n}\n\nexport interface Event {\n    id: number;\n    name: string;\n    competitors: number;\n    scores: Score[];\n    records?: Record[];\n    form_record?: Record;\n    past_record?: Record;\n    score_units: string;\n    world_record?: string;\n    world_record_holder?: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class EventDetailService {\n\n    rootUrl: string;\n\n    constructor(private http: HttpClient) {\n        this.rootUrl = localStorage.getItem('rootUrl');\n    }\n\n    getEvent(id) {\n        return this.http.get(this.rootUrl + '/events/' + id);\n    }\n\n    getEvents() {\n        return this.http.get<[Event]>(this.rootUrl + '/events');\n    }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2V2ZW50LWZpbmRlci9ldmVudC1maW5kZXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<h1>Event Finder</h1>\\n\\n<p>You can use this tool to find information about an event you're participating in. Simply enter your year group, event, and competitor (A, B or C) to get the following information about your event:</p>\\n\\n<ul>\\n    <li>Location</li>\\n    <li>Start time</li>\\n    <li>2018 MGS record for your year</li>\\n    <li>World record</li>\\n</ul>\\n\\n<mat-vertical-stepper [linear]=\\\"true\\\" #eventStepper>\\n    <mat-step [stepControl]=\\\"yearGroupFormGroup\\\">\\n        <ng-template matStepLabel>Select year group and event</ng-template>\\n\\n        <form [formGroup]=\\\"yearGroupFormGroup\\\">\\n            <mat-form-field appearance=\\\"outline\\\">\\n                <mat-label>Year group</mat-label>\\n\\n                <mat-select formControlName=\\\"yearGroup\\\" required>\\n                    <mat-option *ngFor=\\\"let year of [7, 8, 9, 10]\\\" [value]=\\\"year\\\">\\n                        Year {{ year }}\\n                    </mat-option>\\n                </mat-select>\\n            </mat-form-field>\\n\\n            <mat-form-field appearance=\\\"outline\\\">\\n                <mat-label>Event</mat-label>\\n\\n                <mat-select formControlName=\\\"event\\\" required>\\n                    <mat-option *ngFor=\\\"let event of events\\\" [value]=\\\"event.id\\\">\\n                        {{ event.name }}\\n                    </mat-option>\\n                </mat-select>\\n            </mat-form-field>\\n        </form>\\n\\n        <button mat-raised-button color=\\\"primary\\\" class=\\\"display-block\\\" matStepperNext>\\n            Next\\n            <mat-icon>arrow_forward</mat-icon>\\n        </button>\\n    </mat-step>\\n\\n    <mat-step [stepControl]=\\\"competitorFormGroup\\\">\\n        <ng-template matStepLabel>Select competitor</ng-template>\\n\\n        <form [formGroup]=\\\"competitorFormGroup\\\">\\n            <mat-form-field appearance=\\\"outline\\\">\\n                <mat-label>Competitor</mat-label>\\n\\n                <mat-select formControlName=\\\"competitor\\\" required>\\n                    <mat-option *ngFor=\\\"let competitor of getCompetitorList(yearGroupFormGroup.controls.event.value)\\\" [value]=\\\"competitor\\\">\\n                        Competitor {{ competitor }}\\n                    </mat-option>\\n                </mat-select>\\n            </mat-form-field>\\n        </form>\\n\\n        <button mat-raised-button color=\\\"primary\\\" class=\\\"display-block\\\" matStepperNext (click)=\\\"finish()\\\">\\n            Next\\n            <mat-icon>arrow_forward</mat-icon>\\n        </button>\\n    </mat-step>\\n\\n    <mat-step>\\n        <ng-template matStepLabel>Time and location</ng-template>\\n\\n        <mat-spinner *ngIf=\\\"!allocation\\\"></mat-spinner>\\n\\n        <div *ngIf=\\\"allocation\\\">\\n            <p>\\n                You need to be at the <strong>{{ allocation.location }}</strong>\\n                at least 5 minutes before <strong>{{ allocation.starts_at | date: 'shortTime' }}</strong>\\n            </p>\\n\\n            <p>\\n                The year {{ yearGroupFormGroup.controls.yearGroup.value }} record to beat is <strong>{{ recordToBeat.score }} {{ recordToBeat.units }}s</strong>\\n                set by <strong>{{ recordToBeat.holder }}</strong> in 2018.\\n            </p>\\n\\n            <p>\\n                The world record for {{ getEvent().name }} is <strong>{{ getEvent().world_record }}</strong>,\\n                held by <strong>{{ getEvent().world_record_holder }}</strong>.\\n            </p>\\n\\n            <button mat-raised-button color=\\\"primary\\\" (click)=\\\"reset()\\\">\\n                Check another event\\n            </button>\\n        </div>\\n\\n    </mat-step>\\n</mat-vertical-stepper>\\n\"","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {EventDetailService, Event, Record} from '../event-detail/event-detail.service';\nimport {Allocation, EventFinderService} from './event-finder.service';\nimport {AdminService} from '../admin/admin.service';\n\n@Component({\n    selector: 'app-event-finder',\n    templateUrl: './event-finder.component.html',\n    styleUrls: ['./event-finder.component.css']\n})\nexport class EventFinderComponent implements OnInit {\n\n    @ViewChild('eventStepper') eventStepper;\n    yearGroupFormGroup: FormGroup;\n    competitorFormGroup: FormGroup;\n    events: Event[];\n    allocation: Allocation;\n    recordToBeat: Record;\n\n    constructor(private formBuilder: FormBuilder,\n                private eventDetailService: EventDetailService,\n                private eventFinderService: EventFinderService,\n                private adminService: AdminService) {}\n\n    static numberToLetter(n) {\n        const letters = ['A', 'B', 'C'];\n        return letters[n];\n    }\n\n    ngOnInit() {\n        this.yearGroupFormGroup = this.formBuilder.group({\n            yearGroup: ['', Validators.required],\n            event: ['', Validators.required]\n        });\n\n        this.competitorFormGroup = this.formBuilder.group({\n            competitor: ['', Validators.required]\n        });\n\n        this.eventDetailService.getEvents()\n            .subscribe((events: Event[]) => {\n                this.events = events;\n            });\n    }\n\n    getCompetitorList(eventId) {\n        const eventIndex = this.events.map(e => e.id).indexOf(eventId);\n        const competitorArray = [];\n\n        if (this.events[eventIndex]) {\n\n            for (let i = 0; i < this.events[eventIndex].competitors; i++) {\n                competitorArray.push(EventFinderComponent.numberToLetter(i));\n            }\n\n            return competitorArray;\n        } else {\n            return [];\n        }\n    }\n\n    finish() {\n        this.eventFinderService.getAllocation(this.yearGroupFormGroup.controls.yearGroup.value,\n            this.yearGroupFormGroup.controls.event.value,\n            this.competitorFormGroup.controls.competitor.value)\n            .subscribe((allocation: Allocation) => {\n\n                this.adminService.getRecord(this.yearGroupFormGroup.controls.yearGroup.value, this.yearGroupFormGroup.controls.event.value)\n                    .subscribe((record: Record) => {\n                        this.allocation = allocation;\n                        this.recordToBeat = record;\n                    });\n            });\n    }\n\n    reset() {\n        this.allocation = null;\n        this.recordToBeat = null;\n        this.yearGroupFormGroup.reset();\n        this.competitorFormGroup.reset();\n\n        this.eventStepper.reset();\n    }\n\n    getEvent() {\n        return this.events[this.events.map(e => e.id).indexOf(this.yearGroupFormGroup.controls.event.value)];\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Event} from '../event-detail/event-detail.service';\n\nexport interface Allocation {\n    starts_at: object;\n    event_id: number;\n    event: Event;\n    competitor: string;\n    year_group: string;\n    location: string;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class EventFinderService {\n\n    rootUrl: string;\n\n    constructor(private http: HttpClient) {\n        this.rootUrl = localStorage.getItem('rootUrl');\n    }\n\n    getAllocation(yearGroup, eventId, competitor) {\n        return this.http.get<Allocation>(this.rootUrl + '/events/' + eventId + '/year_group/' + yearGroup + '/competitor/' + competitor);\n    }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Zvcm0tZGV0YWlsL2Zvcm0tZGV0YWlsLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"loading\\\"></mat-progress-bar>\\n\\n<div *ngIf=\\\"!loading\\\">\\n    <h1>\\n        {{ form.year }}{{ form.name }}\\n\\n        <mat-menu #switcher=\\\"matMenu\\\">\\n            <a mat-menu-item *ngFor=\\\"let form of forms\\\" [routerLink]=\\\"'/forms/' + form.id\\\" [ngClass]=\\\"'table-position-' + (form.rank - 1)\\\">\\n                <strong>{{ form.year }}{{ form.name }}</strong>\\n                | {{ form.total_points }} points\\n                | {{ form.rank }}{{ nth(form.rank) }} place\\n            </a>\\n        </mat-menu>\\n\\n        <button mat-stroked-button [matMenuTriggerFor]=\\\"switcher\\\">\\n            Switch form\\n            <mat-icon>arrow_drop_down</mat-icon>\\n        </button>\\n    </h1>\\n\\n    <mat-tab-group>\\n        <mat-tab label=\\\"Statistics\\\">\\n\\n            <div class=\\\"mat-elevation-z8\\\">\\n                <table mat-table [dataSource]=\\\"statistics\\\">\\n                    <ng-container matColumnDef=\\\"name\\\">\\n                        <td mat-cell *matCellDef=\\\"let element\\\">\\n                            {{ element.name }}\\n                        </td>\\n                    </ng-container>\\n\\n                    <ng-container matColumnDef=\\\"value\\\">\\n\\n                        <td mat-cell *matCellDef=\\\"let element\\\">\\n                            <strong>\\n                                {{ element.value }}\\n                            </strong>\\n                        </td>\\n\\n                    </ng-container>\\n\\n                    <tr mat-row\\n                        *matRowDef=\\\"let row; columns: ['name', 'value']\\\"\\n                        [ngClass]=\\\"row.name !== 'Total points' && row.name !== 'Records broken' ? ('table-position-' + ( row.value - 1)) : ''\\\"></tr>\\n                </table>\\n            </div>\\n\\n\\n        </mat-tab>\\n\\n        <mat-tab label=\\\"Events breakdown\\\">\\n\\n            <div class=\\\"mat-elevation-z8\\\">\\n                <table class=\\\"breakdown-table mat-table\\\">\\n                    <thead>\\n                        <tr class=\\\"mat-header-row\\\">\\n                            <th rowspan=\\\"2\\\" class=\\\"mat-header-cell\\\">Event</th>\\n\\n                            <th colspan=\\\"2\\\" class=\\\"mat-header-cell\\\">Competitor A</th>\\n                            <th colspan=\\\"2\\\" class=\\\"mat-header-cell\\\">Competitor B</th>\\n                            <th colspan=\\\"2\\\" class=\\\"mat-header-cell\\\">Competitor C</th>\\n\\n                            <th rowspan=\\\"2\\\" class=\\\"mat-header-cell padding-left\\\">Total points</th>\\n                        </tr>\\n                        <tr class=\\\"mat-header-row\\\">\\n                            <th class=\\\"mat-header-cell\\\">Position</th>\\n                            <th class=\\\"mat-header-cell\\\">Points</th>\\n\\n                            <th class=\\\"mat-header-cell\\\">Position</th>\\n                            <th class=\\\"mat-header-cell\\\">Points</th>\\n\\n                            <th class=\\\"mat-header-cell\\\">Position</th>\\n                            <th class=\\\"mat-header-cell\\\">Points</th>\\n                        </tr>\\n                    </thead>\\n\\n                    <tbody>\\n                        <tr class=\\\"mat-row\\\"\\n                            *ngFor=\\\"let event of eventsBreakdown\\\">\\n                            <td class=\\\"mat-cell\\\">\\n                                <a class=\\\"no-link-dark\\\" [routerLink]=\\\"'/events/' + event.id\\\">\\n                                    {{ event.name }}\\n                                </a>\\n                            </td>\\n\\n                            <td class=\\\"mat-cell rank-cell\\\" [ngClass]=\\\"'table-position-' + (event.A.rank - 1)\\\">\\n                                {{ event.A.rank || '' }}\\n                            </td>\\n                            <td class=\\\"mat-cell\\\">{{ event.A.score || '' }}</td>\\n\\n                            <td class=\\\"mat-cell rank-cell\\\" [ngClass]=\\\"'table-position-' + (event.B.rank - 1)\\\">\\n                                {{ event.B.rank || '' }}\\n                            </td>\\n                            <td class=\\\"mat-cell\\\">{{ event.B.score || '' }}</td>\\n\\n                            <td class=\\\"mat-cell rank-cell\\\" [ngClass]=\\\"'table-position-' + (event.C.rank - 1)\\\">\\n                                {{ event.C.rank || '' }}\\n                            </td>\\n                            <td class=\\\"mat-cell\\\">{{ event.C.score || '' }}</td>\\n\\n                            <td class=\\\"mat-cell\\\">{{ event.total || '' }}</td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n\\n        </mat-tab>\\n\\n        <mat-tab *ngIf=\\\"form.records.length > 0\\\" label=\\\"Records\\\">\\n            <table mat-table [dataSource]=\\\"recordsBreakdown\\\" class=\\\"mat-elevation-z8\\\">\\n\\n                <ng-container matColumnDef=\\\"event\\\">\\n                    <th mat-header-cell *matHeaderCellDef> Event </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\">\\n                        <a class=\\\"no-link-dark\\\" [routerLink]=\\\"'/events/' + element.id\\\">\\n                            {{ element.name }}\\n                        </a>\\n                    </td>\\n                </ng-container>\\n\\n                <ng-container matColumnDef=\\\"pastRecord\\\">\\n                    <th mat-header-cell *matHeaderCellDef> 2018 record (year {{ form.year }}) </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"rank-cell\\\">\\n                        {{ safeAccessObject(element.past_record, 'score', 0) }}\\n                        {{ safeAccessObject(element.past_record, 'units', '', 's') }}\\n                    </td>\\n                </ng-container>\\n\\n                <ng-container matColumnDef=\\\"currentRecord\\\">\\n                    <th mat-header-cell *matHeaderCellDef> 2019 record (this form) </th>\\n                    <td mat-cell\\n                        *matCellDef=\\\"let element\\\"\\n                        [ngClass]=\\\"{ 'table-highlight': safeCompareObject(element) }\\\"\\n                        class=\\\"rank-cell\\\" >\\n\\n                        {{ safeAccessObject(element.form_record, 'score', 0) }}\\n                        {{ safeAccessObject(element.form_record, 'units', '', 's') }}\\n\\n                        <span *ngIf=\\\"safeCompareObject(element)\\\">\\n                            by {{ safeAccessObject(element.form_record, 'holder', '') }}\\n                        </span>\\n\\n                        <span *ngIf=\\\"safeCompareObject(element)\\\" class=\\\"table-subtext\\\">\\n                            Record broken!\\n                        </span>\\n                    </td>\\n                </ng-container>\\n\\n                <tr mat-header-row *matHeaderRowDef=\\\"['event', 'pastRecord', 'currentRecord']\\\"></tr>\\n                <tr mat-row *matRowDef=\\\"let row; columns: ['event', 'pastRecord', 'currentRecord']\\\"></tr>\\n\\n            </table>\\n        </mat-tab>\\n    </mat-tab-group>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Form, FormDetailService, Score } from './form-detail.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { EventDetailService } from '../event-detail/event-detail.service';\nimport { Event, Record } from '../event-detail/event-detail.service';\nimport {AdminService} from '../admin/admin.service';\n\n@Component({\n    selector: 'app-form-detail',\n    templateUrl: './form-detail.component.html',\n    styleUrls: ['./form-detail.component.css']\n})\nexport class FormDetailComponent implements OnInit {\n\n    constructor(private formDetailService: FormDetailService,\n                private eventDetailService: EventDetailService,\n                private activatedRoute: ActivatedRoute) {\n    }\n\n    form: Form;\n    forms: Form[];\n    events: Event[];\n    statistics: {}[];\n    eventsBreakdown: {A: {score, rank}, B: {score, rank}, C: {score, rank}, name: string, id, total: 0}[];\n    recordsBreakdown: object[];\n    loading: boolean;\n\n    ngOnInit() {\n\n        this.activatedRoute.paramMap.subscribe(params => {\n\n            this.loading = true;\n            this.eventsBreakdown = [];\n\n            this.formDetailService.getForm(params.get('id'))\n                .subscribe((form: Form) => {\n                    this.form = {...form};\n                    console.log(this.form);\n\n                    this.statistics = [\n                        { name: 'Total points', value: this.form.total_points },\n                        { name: 'Records broken', value: this.form.records.length },\n                        { name: 'School position', value: this.form.rank },\n                        { name: 'Year position', value: this.form.year_rank }\n                    ];\n\n                    this.eventDetailService.getEvents()\n                        .subscribe((events: [Event]) => {\n                            this.events = [...events];\n\n                            this.events.forEach((event: Event) => {\n                                this.eventsBreakdown.push({\n                                    A: {score: 0, rank: 0},\n                                    B: {score: 0, rank: 0},\n                                    C: {score: 0, rank: 0},\n                                    name: event.name,\n                                    id: event.id,\n                                    total: 0\n                                });\n                            });\n\n                            this.form.scores.forEach((score: Score) => {\n                                const index = this.eventsBreakdown\n                                    .map(e => e.name)\n                                    .indexOf(score.event.name);\n\n                                this.eventsBreakdown[index][score.competitor] = {...score};\n                            });\n\n                            this.eventsBreakdown.forEach(event => {\n                                event.total = event.A.score + event.B.score + event.C.score;\n                            });\n\n                            this.recordsBreakdown = [];\n\n                            if (this.form.records.length > 0) {\n                                events.forEach((event: Event) => {\n                                    this.form.records.forEach((record: Record) => {\n                                        if (record.event_id === event.id) {\n                                            event.form_record = record;\n                                        }\n                                    });\n\n                                    event.records.forEach((record: Record) => {\n                                        if (record.past_year_group === this.form.year && record.current_record === false) {\n                                            event.past_record = record;\n                                        }\n                                    });\n\n                                    this.recordsBreakdown.push(event);\n                                });\n                            }\n\n                            console.log(this.recordsBreakdown);\n\n                            this.loading = false;\n\n                        });\n                });\n\n            this.formDetailService.getForms()\n                .subscribe((forms: Form[]) => {\n                    this.forms = forms.sort((a: Form, b: Form) => {\n                        return a.rank - b.rank;\n                    });\n\n                    this.forms.forEach((e: Form) => {\n                        e.total_points = e.scores\n                            .map(score => score.score)\n                            .reduce((total, num) => {\n                            return total + num;\n                        }, 0);\n                    });\n\n                    this.forms.splice(this.forms\n                        .map(e => e.id)\n                        .indexOf(\n                            parseInt(params.get('id'), 10)\n                        ), 1);\n                });\n        });\n    }\n\n    nth(d) {\n        if (d > 3 && d < 21) {\n            return 'th';\n        }\n\n        switch (d % 10) {\n            case 1:  return 'st';\n            case 2:  return 'nd';\n            case 3:  return 'rd';\n            default: return 'th';\n        }\n    }\n\n    safeAccessObject(object, property, fallback, append?) {\n        if (object) {\n            return `${object[property]}${append || ''}`;\n        } else {\n            return fallback;\n        }\n    }\n\n    safeCompareObject(object) {\n        if (object.form_record && object.past_record) {\n            if (object.form_record.score > object.past_record.score) {\n                return true;\n            }\n        } else {\n            return false;\n        }\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport { Event, Record } from '../event-detail/event-detail.service';\n\nexport interface Form {\n    id?: number;\n    name: string;\n    year: number;\n    scores?: Score[];\n    total_points?: number;\n    records?: Record[];\n    rank?: number;\n    year_rank?: number;\n\n    // pseudo-attributes\n    position?: number;\n    score_id?: number;\n    score_number?: number;\n\n    equals_record?: boolean;\n    beats_record?: boolean;\n    record_holder?: string;\n}\n\nexport interface Score {\n    id?: number;\n\n    form_id: number;\n    event_id: number;\n\n    // alternative names\n    score?: number;\n    points?: number;\n\n    competitor: string;\n    event?: Event;\n    form?: Form;\n    rank?: number;\n\n    beats_record?: boolean;\n    record_value?: number;\n    record_holder?: string;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class FormDetailService {\n\n    rootUrl: string;\n\n    constructor(private http: HttpClient) {\n        this.rootUrl = localStorage.getItem('rootUrl');\n    }\n\n    getForm(id) {\n        return this.http.get<Form>(this.rootUrl + '/forms/' + id);\n    }\n\n    getForms() {\n        return this.http.get<[Form]>(this.rootUrl + '/forms');\n    }\n\n    getYearGroupForms(year) {\n        return this.http.get<[Form]>(this.rootUrl + '/year/' + year + '/forms');\n    }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvaG9tZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<h1>MGS Sports Day 2019</h1>\\r\\n\\r\\n<p>This website provides live statistics for Sports Day 2019. Switch between the <strong>All forms</strong> and <strong>All events</strong> tab to explore data by form or event.</p>\\r\\n\\r\\n<mat-progress-bar *ngIf=\\\"loading\\\" mode=\\\"indeterminate\\\"></mat-progress-bar>\\r\\n\\r\\n<mat-tab-group *ngIf=\\\"!loading\\\">\\r\\n    <mat-tab label=\\\"All forms\\\">\\r\\n        <ng-template matTabContent>\\r\\n            <p>All forms, sorted by points descending. Click on <strong>View form</strong> next to each form to see more statistics.</p>\\r\\n\\r\\n            <div class=\\\"mat-elevation-z8\\\">\\r\\n                <table mat-table [dataSource]=\\\"forms\\\" class=\\\"breakdown-table\\\">\\r\\n                    <ng-container matColumnDef=\\\"position\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef>School position</th>\\r\\n\\r\\n                        <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"rank-cell\\\"\\r\\n                            [ngClass]=\\\"'table-position-' + (element.rank - 1)\\\">\\r\\n                            {{ element.rank }}\\r\\n                        </td>\\r\\n                    </ng-container>\\r\\n\\r\\n                    <ng-container matColumnDef=\\\"year_position\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef>Year group position</th>\\r\\n\\r\\n                        <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"rank-cell\\\"\\r\\n                            [ngClass]=\\\"'table-position-' + (element.year_rank - 1)\\\">\\r\\n                            {{ element.year_rank }}\\r\\n                        </td>\\r\\n                    </ng-container>\\r\\n\\r\\n                    <ng-container matColumnDef=\\\"form\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef>Form</th>\\r\\n\\r\\n                        <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n                            <strong>{{ element.year }}{{ element.name }}</strong>\\r\\n                        </td>\\r\\n                    </ng-container>\\r\\n\\r\\n                    <ng-container matColumnDef=\\\"total\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef>Total points</th>\\r\\n\\r\\n                        <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n                            {{ element.total_points }}\\r\\n                        </td>\\r\\n                    </ng-container>\\r\\n\\r\\n                    <ng-container matColumnDef=\\\"action\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef></th>\\r\\n\\r\\n                        <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n                            <a mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"'/forms/' + element.id\\\">\\r\\n                                View form\\r\\n                            </a>\\r\\n                        </td>\\r\\n                    </ng-container>\\r\\n\\r\\n                    <tr mat-header-row *matHeaderRowDef=\\\"['form', 'position', 'year_position', 'total', 'action']\\\"></tr>\\r\\n                    <tr mat-row\\r\\n                        *matRowDef=\\\"let row; columns: ['form', 'position', 'year_position', 'total', 'action']\\\"\\r\\n                    ></tr>\\r\\n                </table>\\r\\n            </div>\\r\\n        </ng-template>\\r\\n\\r\\n    </mat-tab>\\r\\n\\r\\n    <mat-tab label=\\\"All events\\\">\\r\\n\\r\\n        <ng-template matTabContent>\\r\\n            <p>Click on an event to see more statistics.</p>\\r\\n\\r\\n            <div class=\\\"mat-elevation-z8\\\">\\r\\n                <table mat-table [dataSource]=\\\"events\\\">\\r\\n                    <ng-container matColumnDef=\\\"name\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef>Name</th>\\r\\n\\r\\n                        <td mat-cell *matCellDef=\\\"let element\\\" matRipple matRippleColor=\\\"primary\\\" [routerLink]=\\\"'/events/' + element.id\\\">\\r\\n                            {{ element.name }}\\r\\n                        </td>\\r\\n                    </ng-container>\\r\\n\\r\\n                    <tr mat-header-row *matHeaderRowDef=\\\"['name']\\\"></tr>\\r\\n                    <tr mat-row *matRowDef=\\\"let row; columns: ['name']\\\"></tr>\\r\\n                </table>\\r\\n            </div>\\r\\n        </ng-template>\\r\\n\\r\\n    </mat-tab>\\r\\n</mat-tab-group>\\r\\n\"","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {EventDetailService, Event} from '../event-detail/event-detail.service';\nimport {Form, FormDetailService} from '../form-detail/form-detail.service';\nimport {MatPaginator, MatTableDataSource} from '@angular/material';\n\n@Component({\n    selector: 'app-home',\n    templateUrl: './home.component.html',\n    styleUrls: ['./home.component.css'],\n    providers: [EventDetailService]\n})\nexport class HomeComponent implements OnInit {\n\n    events: Event[];\n    forms: Form[];\n    loading: boolean;\n\n    constructor(private eventDetailService: EventDetailService, private formDetailService: FormDetailService) {\n        this.loading = true;\n    }\n\n    ngOnInit() {\n\n        this.eventDetailService.getEvents()\n            .subscribe((events: [Event]) => {\n                this.events = [...events];\n\n                this.formDetailService.getForms()\n                    .subscribe((forms: [Form]) => {\n\n                        this.forms = [...forms];\n\n                        this.forms = this.forms.sort((a, b) => {\n                            return a.rank - b.rank;\n                        });\n\n                        this.loading = false;\n                    });\n            });\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {\n    MatBadgeModule,\n    MatButtonModule, MatCardModule, MatChipsModule, MatDividerModule, MatExpansionModule, MatFormFieldModule,\n    MatIconModule, MatInputModule,\n    MatListModule, MatMenuModule, MatPaginatorModule, MatProgressBarModule, MatProgressSpinnerModule, MatRippleModule, MatSelectModule,\n    MatSidenavModule, MatSnackBarModule, MatSortModule, MatStepperModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule, MatTooltipModule\n} from '@angular/material';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\n\n@NgModule({\n    declarations: [],\n    imports: [\n        CommonModule,\n        BrowserAnimationsModule,\n        MatButtonModule,\n        MatToolbarModule,\n        MatSidenavModule,\n        MatIconModule,\n        MatListModule,\n        MatTabsModule,\n        MatTableModule,\n        MatRippleModule,\n        MatPaginatorModule,\n        MatProgressSpinnerModule,\n        MatProgressBarModule,\n        MatStepperModule,\n        MatInputModule,\n        MatSelectModule,\n        FormsModule,\n        MatSnackBarModule,\n        ReactiveFormsModule,\n        MatDividerModule,\n        MatExpansionModule,\n        MatCardModule,\n        MatMenuModule,\n        MatTooltipModule,\n        MatChipsModule,\n        MatBadgeModule,\n        MatSortModule\n    ],\n    exports: [\n        BrowserAnimationsModule,\n        MatButtonModule,\n        MatToolbarModule,\n        MatSidenavModule,\n        MatIconModule,\n        MatListModule,\n        MatTabsModule,\n        MatTableModule,\n        MatRippleModule,\n        MatPaginatorModule,\n        MatProgressSpinnerModule,\n        MatProgressBarModule,\n        MatStepperModule,\n        MatInputModule,\n        MatSelectModule,\n        FormsModule,\n        MatSnackBarModule,\n        ReactiveFormsModule,\n        MatDividerModule,\n        MatExpansionModule,\n        MatCardModule,\n        MatMenuModule,\n        MatTooltipModule,\n        MatChipsModule,\n        MatBadgeModule,\n        MatSortModule\n    ]\n})\nexport class MaterialImportsModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25vdC1mb3VuZC9ub3QtZm91bmQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<h1>Page not found</h1>\\n\\n<p>The page you have requested doesn't exist. This is probably because a link you clicked on doesn't work, or you accidentally changed something in the web address.</p>\\n\\n<p><strong>Don't worry!</strong> To continue, <a routerLink=\\\"/\\\">click here</a> to return to the home page.</p>\\n\\n<mat-accordion>\\n    <mat-expansion-panel>\\n        <mat-expansion-panel-header>\\n            <mat-panel-title>Think something is broken?</mat-panel-title>\\n        </mat-expansion-panel-header>\\n\\n        <p>If you think you got to this page because a link you clicked on is broken, or you've found another issue with the site, please report the issue so that it can be fixed in a future version.</p>\\n\\n        <p>For instructions on how to do so, click the button below. We appreciate your support.</p>\\n\\n        <a mat-stroked-button color=\\\"primary\\\" routerLink=\\\"/about\\\">Contact info</a>\\n    </mat-expansion-panel>\\n</mat-accordion>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import {Injectable} from '@angular/core';\r\nimport {HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\r\nimport {Observable, throwError} from 'rxjs';\r\nimport {catchError, retry, tap} from 'rxjs/operators';\r\nimport {MatSnackBar} from '@angular/material';\r\nimport {Router} from '@angular/router';\r\n\r\n@Injectable()\r\nexport class RequestInterceptor implements HttpInterceptor {\r\n    constructor(private snackBar: MatSnackBar, private router: Router) {}\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        // @ts-ignore\r\n        return next.handle(request)\r\n            .pipe(\r\n                retry(1),\r\n                catchError((error: HttpErrorResponse) => {\r\n                    if (error.status === 404) {\r\n                        this.router.navigateByUrl('/404');\r\n                    } else {\r\n                        const snackBarRef = this.snackBar.open('An API call failed, and the page couldn\\'t be loaded. Try returning to the home page, or refreshing the page.', 'Refresh page');\r\n\r\n                        snackBarRef.afterDismissed().subscribe(() => {\r\n                            window.location.reload();\r\n                        });\r\n                    }\r\n\r\n                    return throwError(error);\r\n                })\r\n            );\r\n    }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}